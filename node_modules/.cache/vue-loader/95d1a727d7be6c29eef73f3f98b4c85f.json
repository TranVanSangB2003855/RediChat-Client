{"remainingRequest":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\src\\App.vue","mtime":1677001761858},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1676947846630},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1676947841718},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1676947840457},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676947860410},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1676947841100}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5BcHAgewogIHBhZGRpbmc6IDFyZW07Cn0KCi5ib3ggewogIHdpZHRoOiBmaXQtY29udGVudDsKICBoZWlnaHQ6IDQwMHB4OwogIGJvcmRlcjogc29saWQgMXB4ICMwMDA7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIG1hcmdpbi10b3A6IDFyZW07CiAgd2lkdGg6IDMxMHB4OwogIG92ZXJmbG93OiBzY3JvbGw7Cn0KCi5tZXNzYWdlcyB7CiAgZmxleC1ncm93OiAxOwp9CgouaW5wdXQtZGl2IHsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\src\\App.vue"],"names":[],"mappings":";AAgJA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;;AAEA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"D:/OneDrive - vrrjd/Desktop/RediChat/client/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"App\">\n    <div style=\"display: flex; flex-direction: row; justify-content: start;\">\n      <form @submit.prevent=\"submitToken\">\n        <!-- <input type=\"text\" placeholder=\"Enter token\" v-model=\"token\" /> -->\n        <button type=\"submit\">Chat với người lạ nào !</button>\n      </form>\n      <button @click=\"stopChat()\" v-show=\"stop\">Stop</button>\n      <button @click=\"nextRoom()\" v-show=\"next\">Next</button>\n\n    </div>\n    <div class=\"box\">\n      <div class=\"messages\">\n        <template v-for=\"user in messages\" :key=\"user.id\">\n          <div style=\"text-align: left;\" v-if=\"user.name === 'Stranger' || user.name === 'Bot'\">\n            <b>{{ user.name }}:</b> {{ user.message }}\n          </div>\n          <div style=\"text-align: right;\" v-else>\n            {{ user.message }} <b>:{{ user.name }}</b>\n          </div>\n        </template>\n      </div>\n      <div class=\"messages\"></div>\n      <form class=\"input-div\" @submit.prevent=\"submitMessage\">\n        <input type=\"text\" placeholder=\"Type in text\" v-model=\"inputMessageText\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SocketioService from './services/socketio.service.js';\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  mounted() {\n    this.toggleFormElements(\"form.input-div\", true);\n  },\n  data() {\n    return {\n      token: '',\n      inputMessageText: '',\n      messages: [],\n      stop: false,\n      next: false\n    };\n  },\n  methods: {\n    toggleFormElements(formSelected, bDisabled) {\n      let form = document.querySelector(formSelected);\n      let inputs = form.getElementsByTagName(\"input\");\n      for (let i = 0; i < inputs.length; i++) {\n        inputs[i].disabled = bDisabled;\n      }\n      let selects = form.getElementsByTagName(\"select\");\n      for (let i = 0; i < selects.length; i++) {\n        selects[i].disabled = bDisabled;\n      }\n      let textareas = form.getElementsByTagName(\"textarea\");\n      for (let i = 0; i < textareas.length; i++) {\n        textareas[i].disabled = bDisabled;\n      }\n      let buttons = form.getElementsByTagName(\"button\");\n      for (let i = 0; i < buttons.length; i++) {\n        buttons[i].disabled = bDisabled;\n      }\n    },\n    submitToken() {\n      console.log(this.token);\n      SocketioService.setupSocketConnection(this.token);\n      SocketioService.statusRoom((err, data) => {\n        console.log(data);\n        if (data.message.includes(\"NextRoom\")) {\n          data.message = data.message.substr(8, data.message.length - 1);\n          this.stop = false; this.next = false;\n          this.toggleFormElements(\"form.input-div\", true);\n        }\n        else if (this.messages.length > 0) {\n          this.messages = [];\n        }\n        if (data.message.includes(\"Strangers have entered the room\")) {\n          const chatRoom = data.message.substr(data.message.indexOf(\"|\") + 1, data.message.length - 1);\n          localStorage.setItem('chatRoom', chatRoom);\n          data.message = data.message.substr(0, data.message.indexOf(\"|\"));\n          this.toggleFormElements(\"form.input-div\", false);\n          this.stop = true; this.next = true;\n        }\n        if (data.message === 'The stranger has escaped. Waiting for the next one ....') {\n          this.stop = false; this.next = false;\n          this.toggleFormElements(\"form.input-div\", true);\n        }\n        this.messages.push(data);\n      });\n      SocketioService.receiveMessage((err, data) => {\n        console.log(data);\n        this.messages.push(data);\n      });\n    },\n    submitMessage() {\n      console.log(\"sending message....\");\n      const message = this.inputMessageText;\n      SocketioService.sendMessage(message, cb => {\n        // callback is acknowledgement from server\n        console.log(cb);\n        this.messages.push({\n          message,\n          name: \"Me\"\n        });\n        // clear the input after the message is sent\n        this.inputMessageText = '';\n      });\n    },\n    stopChat() {\n      SocketioService.disconnect();\n      this.messages.push({\n        message: \"You left room !\",\n        name: \"Bot\"\n      });\n      this.toggleFormElements(\"form.input-div\", true);\n      localStorage.clear();\n      // clear the input after the message is sent\n          this.stop = false; this.next = false;\n      this.inputMessageText = '';\n\n    },\n    nextRoom() {\n      // SocketioService.disconnect();\n      this.messages = [{ message: \"Waiting for a stranger ...\", name: \"Bot\" }];\n          this.stop = false; this.next = false;\n      // this.submitToken();\n      SocketioService.nextRoom();\n    }\n  },\n  beforeUnmount() {\n    SocketioService.disconnect();\n  }\n\n}\n</script>\n\n<style>\n.App {\n  padding: 1rem;\n}\n\n.box {\n  width: fit-content;\n  height: 400px;\n  border: solid 1px #000;\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n  width: 310px;\n  overflow: scroll;\n}\n\n.messages {\n  flex-grow: 1;\n}\n\n.input-div {\n  display: flex;\n  width: 100%;\n}\n</style>"]}]}