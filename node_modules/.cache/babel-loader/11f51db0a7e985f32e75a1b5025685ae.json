{"remainingRequest":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\src\\App.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\src\\App.vue","mtime":1676989640331},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676947860410},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1676947861784},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676947860410},{"path":"D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1676947841100}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFNvY2tldGlvU2VydmljZSBmcm9tICcuL3NlcnZpY2VzL3NvY2tldGlvLnNlcnZpY2UuanMnOyAvLyBzdGF0aWMgZGF0YSBvbmx5IGZvciBkZW1vIHB1cnBvc2VzLCBpbiByZWFsIHdvcmxkIHNjZW5hcmlvLCB0aGlzIHdvdWxkIGJlIGFscmVhZHkgc3RvcmVkIG9uIGNsaWVudAovLyBjb25zdCBTRU5ERVIgPSB7Ci8vICAgaWQ6ICIxMjMiLAovLyAgIG5hbWU6ICJKb2huIERvZSIsCi8vIH07CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czoge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMudG9nZ2xlRm9ybUVsZW1lbnRzKCJmb3JtLmlucHV0LWRpdiIsIHRydWUpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRva2VuOiAnJywKICAgICAgaW5wdXRNZXNzYWdlVGV4dDogJycsCiAgICAgIG1lc3NhZ2VzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZUZvcm1FbGVtZW50czogZnVuY3Rpb24gdG9nZ2xlRm9ybUVsZW1lbnRzKGZvcm1TZWxlY3RlZCwgYkRpc2FibGVkKSB7CiAgICAgIHZhciBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihmb3JtU2VsZWN0ZWQpOwogICAgICB2YXIgaW5wdXRzID0gZm9ybS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaW5wdXQiKTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW5wdXRzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaW5wdXRzW2ldLmRpc2FibGVkID0gYkRpc2FibGVkOwogICAgICB9CgogICAgICB2YXIgc2VsZWN0cyA9IGZvcm0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNlbGVjdCIpOwoKICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHNlbGVjdHMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgc2VsZWN0c1tfaV0uZGlzYWJsZWQgPSBiRGlzYWJsZWQ7CiAgICAgIH0KCiAgICAgIHZhciB0ZXh0YXJlYXMgPSBmb3JtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0ZXh0YXJlYSIpOwoKICAgICAgZm9yICh2YXIgX2kyID0gMDsgX2kyIDwgdGV4dGFyZWFzLmxlbmd0aDsgX2kyKyspIHsKICAgICAgICB0ZXh0YXJlYXNbX2kyXS5kaXNhYmxlZCA9IGJEaXNhYmxlZDsKICAgICAgfQoKICAgICAgdmFyIGJ1dHRvbnMgPSBmb3JtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJidXR0b24iKTsKCiAgICAgIGZvciAodmFyIF9pMyA9IDA7IF9pMyA8IGJ1dHRvbnMubGVuZ3RoOyBfaTMrKykgewogICAgICAgIGJ1dHRvbnNbX2kzXS5kaXNhYmxlZCA9IGJEaXNhYmxlZDsKICAgICAgfQogICAgfSwKICAgIHN1Ym1pdFRva2VuOiBmdW5jdGlvbiBzdWJtaXRUb2tlbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKHRoaXMudG9rZW4pOwogICAgICBTb2NrZXRpb1NlcnZpY2Uuc2V0dXBTb2NrZXRDb25uZWN0aW9uKHRoaXMudG9rZW4pOwogICAgICBTb2NrZXRpb1NlcnZpY2Uuc3RhdHVzUm9vbShmdW5jdGlvbiAoZXJyLCBkYXRhKSB7CiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgIGlmIChfdGhpcy5tZXNzYWdlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICBfdGhpcy5tZXNzYWdlcyA9IFtdOwogICAgICAgIH0KCiAgICAgICAgaWYgKGRhdGEubWVzc2FnZSA9PT0gJ1N0cmFuZ2VycyBoYXZlIGVudGVyZWQgdGhlIHJvb20nKSB7CiAgICAgICAgICBfdGhpcy50b2dnbGVGb3JtRWxlbWVudHMoImZvcm0uaW5wdXQtZGl2IiwgZmFsc2UpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGRhdGEubWVzc2FnZSA9PT0gJ1RoZSBzdHJhbmdlciBoYXMgZXNjYXBlZC4gV2FpdGluZyBmb3IgdGhlIG5leHQgb25lIC4uLi4nKSB7CiAgICAgICAgICBfdGhpcy50b2dnbGVGb3JtRWxlbWVudHMoImZvcm0uaW5wdXQtZGl2IiwgdHJ1ZSk7CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5tZXNzYWdlcy5wdXNoKGRhdGEpOwogICAgICB9KTsKICAgICAgU29ja2V0aW9TZXJ2aWNlLnJlY2VpdmVNZXNzYWdlKGZ1bmN0aW9uIChlcnIsIGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKCiAgICAgICAgX3RoaXMubWVzc2FnZXMucHVzaChkYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgc3VibWl0TWVzc2FnZTogZnVuY3Rpb24gc3VibWl0TWVzc2FnZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvLyBjb25zdCBDSEFUX1JPT00gPSAibXlSYW5kb21DaGF0Um9vbUlkIjsKICAgICAgY29uc29sZS5sb2coInNlbmRpbmcgbWVzc2FnZS4uLi4iKTsKICAgICAgdmFyIG1lc3NhZ2UgPSB0aGlzLmlucHV0TWVzc2FnZVRleHQ7CiAgICAgIFNvY2tldGlvU2VydmljZS5zZW5kTWVzc2FnZShtZXNzYWdlLCBmdW5jdGlvbiAoY2IpIHsKICAgICAgICAvLyBjYWxsYmFjayBpcyBhY2tub3dsZWRnZW1lbnQgZnJvbSBzZXJ2ZXIKICAgICAgICBjb25zb2xlLmxvZyhjYik7CgogICAgICAgIF90aGlzMi5tZXNzYWdlcy5wdXNoKHsKICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsCiAgICAgICAgICBuYW1lOiAiTWUiCiAgICAgICAgfSk7IC8vIGNsZWFyIHRoZSBpbnB1dCBhZnRlciB0aGUgbWVzc2FnZSBpcyBzZW50CgoKICAgICAgICBfdGhpczIuaW5wdXRNZXNzYWdlVGV4dCA9ICcnOwogICAgICB9KTsKICAgIH0sCiAgICBzdG9wQ2hhdDogZnVuY3Rpb24gc3RvcENoYXQoKSB7CiAgICAgIFNvY2tldGlvU2VydmljZS5kaXNjb25uZWN0KCk7CiAgICAgIHRoaXMubWVzc2FnZXMucHVzaCh7CiAgICAgICAgbWVzc2FnZTogIllvdSBsZWZ0IHJvb20gISIsCiAgICAgICAgbmFtZTogIkJvdCIKICAgICAgfSk7CiAgICAgIHRoaXMudG9nZ2xlRm9ybUVsZW1lbnRzKCJmb3JtLmlucHV0LWRpdiIsIHRydWUpOyAvLyBjbGVhciB0aGUgaW5wdXQgYWZ0ZXIgdGhlIG1lc3NhZ2UgaXMgc2VudAoKICAgICAgdGhpcy5pbnB1dE1lc3NhZ2VUZXh0ID0gJyc7CiAgICB9LAogICAgbmV4dFJvb206IGZ1bmN0aW9uIG5leHRSb29tKCkgewogICAgICBTb2NrZXRpb1NlcnZpY2UuZGlzY29ubmVjdCgpOwogICAgICB0aGlzLm1lc3NhZ2VzID0gW107CiAgICAgIHRoaXMuc3VibWl0VG9rZW4oKTsKICAgIH0KICB9LAogIGJlZm9yZVVubW91bnQ6IGZ1bmN0aW9uIGJlZm9yZVVubW91bnQoKSB7CiAgICBTb2NrZXRpb1NlcnZpY2UuZGlzY29ubmVjdCgpOwogIH0KfTs="},{"version":3,"sources":["D:\\OneDrive - vrrjd\\Desktop\\RediChat\\client\\src\\App.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- <template>\n  <div class=\"App\">\n    <form @submit.prevent=\"submitToken\">\n      <input type=\"text\" placeholder=\"Enter token\" v-model=\"token\" />\n      <button type=\"submit\">Submit</button>\n    </form>\n    <div class=\"box\">\n      <div class=\"messages\">\n        <div v-for=\"user in messages\" :key=\"user.id\">\n          {{user.name}}: {{user.message}}\n        </div>\n      </div>\n      <div class=\"messages\"></div>\n      <form class=\"input-div\" @submit.prevent=\"submitMessage\">\n        <input type=\"text\" placeholder=\"Type in text\" v-model=\"inputMessageText\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SocketioService from './services/socketio.service.js';\n\n// static data only for demo purposes, in real world scenario, this would be already stored on client\nconst SENDER = {\n  id: \"123\",\n  name: \"John Doe\",\n};\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data() {\n    return {\n      token: '',\n      inputMessageText: '',\n      messages: []\n    };\n  },\n  methods: {\n    submitToken() {\n      console.log(this.token);\n      SocketioService.setupSocketConnection(this.token);\n      SocketioService.subscribeToMessages((err, data) => {\n        console.log(data);\n        this.messages.push(data);\n      });\n    },\n    submitMessage() {\n      const CHAT_ROOM = \"myRandomChatRoomId\";\n      const message = this.inputMessageText;\n      SocketioService.sendMessage({message, roomName: CHAT_ROOM}, cb => {\n        // callback is acknowledgement from server\n        console.log(cb);\n        this.messages.push({\n          message,\n          ...SENDER\n        });\n        // clear the input after the message is sent\n        this.inputMessageText = '';\n      });\n    }\n  },\n  beforeUnmount() {\n    SocketioService.disconnect();\n  }\n}\n</script>\n\n<style>\n.App {\n  padding: 1rem;\n}\n\n.box {\n  width: fit-content;\n  height: 400px;\n  border: solid 1px #000;\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n}\n\n.messages {\n  flex-grow: 1;\n}\n\n.input-div {\n  display: flex;\n  width: 100%;\n}\n</style> -->\n\n<template>\n  <div class=\"App\">\n    <form @submit.prevent=\"submitToken\">\n      <!-- <input type=\"text\" placeholder=\"Enter token\" v-model=\"token\" /> -->\n      <button type=\"submit\">Chat với người lạ nào !</button>\n    </form>\n    <button @click=\"stopChat()\">Stop</button>\n    <button @click=\"nextRoom()\">Next</button>\n    <div class=\"box\">\n      <div class=\"messages\">\n        <template v-for=\"user in messages\" :key=\"user.id\">\n          <div style=\"text-align: left;\" v-if=\"user.name === 'Stranger' || user.name === 'Bot'\">\n            <b>{{ user.name }}:</b> {{ user.message }}\n          </div>\n          <div style=\"text-align: right;\" v-else>\n            {{ user.message }} <b>:{{ user.name }}</b>\n          </div>\n        </template>\n      </div>\n      <div class=\"messages\"></div>\n      <form class=\"input-div\" @submit.prevent=\"submitMessage\">\n        <input type=\"text\" placeholder=\"Type in text\" v-model=\"inputMessageText\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SocketioService from './services/socketio.service.js';\n\n// static data only for demo purposes, in real world scenario, this would be already stored on client\n// const SENDER = {\n//   id: \"123\",\n//   name: \"John Doe\",\n// };\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  mounted() {\n    this.toggleFormElements(\"form.input-div\",true);\n  },\n  data() {\n    return {\n      token: '',\n      inputMessageText: '',\n      messages: [],\n    };\n  },\n  methods: {\n    toggleFormElements(formSelected,bDisabled) {\n      let form = document.querySelector(formSelected);\n      let inputs = form.getElementsByTagName(\"input\");\n      for (let i = 0; i < inputs.length; i++) {\n        inputs[i].disabled = bDisabled;\n      }\n      let selects = form.getElementsByTagName(\"select\");\n      for (let i = 0; i < selects.length; i++) {\n        selects[i].disabled = bDisabled;\n      }\n      let textareas = form.getElementsByTagName(\"textarea\");\n      for (let i = 0; i < textareas.length; i++) {\n        textareas[i].disabled = bDisabled;\n      }\n      let buttons = form.getElementsByTagName(\"button\");\n      for (let i = 0; i < buttons.length; i++) {\n        buttons[i].disabled = bDisabled;\n      }\n    },\n    submitToken() {\n      console.log(this.token);\n      SocketioService.setupSocketConnection(this.token);\n      SocketioService.statusRoom((err, data) => {\n        console.log(data);\n        if (this.messages.length > 0) {\n          this.messages = [];\n        }\n        if(data.message === 'Strangers have entered the room'){\n          this.toggleFormElements(\"form.input-div\",false);\n        }\n        if(data.message === 'The stranger has escaped. Waiting for the next one ....'){\n          this.toggleFormElements(\"form.input-div\",true);\n        }\n        this.messages.push(data);\n      });\n      SocketioService.receiveMessage((err, data) => {\n        console.log(data);\n        this.messages.push(data);\n      });\n    },\n    submitMessage() {\n      // const CHAT_ROOM = \"myRandomChatRoomId\";\n      console.log(\"sending message....\");\n      const message = this.inputMessageText;\n      SocketioService.sendMessage(message, cb => {\n        // callback is acknowledgement from server\n        console.log(cb);\n        this.messages.push({\n          message,\n          name: \"Me\"\n        });\n        // clear the input after the message is sent\n        this.inputMessageText = '';\n      });\n    },\n    stopChat() {\n      SocketioService.disconnect();\n      this.messages.push({\n        message: \"You left room !\",\n        name: \"Bot\"\n      });\n      this.toggleFormElements(\"form.input-div\",true);\n      // clear the input after the message is sent\n      this.inputMessageText = '';\n      \n    },\n    nextRoom() {\n      SocketioService.disconnect();\n      this.messages = [];\n      this.submitToken();\n    }\n  },\n  beforeUnmount() {\n    SocketioService.disconnect();\n  }\n  \n}\n</script>\n\n<style>\n.App {\n  padding: 1rem;\n}\n\n.box {\n  width: fit-content;\n  height: 400px;\n  border: solid 1px #000;\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n  width: 310px;\n  overflow: scroll;\n}\n\n.messages {\n  flex-grow: 1;\n}\n\n.input-div {\n  display: flex;\n  width: 100%;\n}\n</style>\n\n\n\n\n<!-- <template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n</template>\n\n<script>\nimport SocketioService from './services/socketio.service.js';\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  created() {\n    SocketioService.setupSocketConnection();\n  },\n  beforeUnmount() {\n    SocketioService.disconnect();\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style> -->\n\n"],"sourceRoot":""}]}